{"version":3,"sources":["components/Calculator/Calculator.jsx","components/Calculator/CalculatorContainer.jsx","App.js","reportWebVitals.js","redux/calculator-reducer.js","redux/redux-store.js","index.js","components/Calculator/Calculator.module.css"],"names":["Calculator","props","useState","currentVal","setCurrentVal","useEffect","onNumberPressed","buttonVal","onOperatorPressed","onACPressed","onEqualsPressed","sum","eval","className","s","calculatorContainer","type","readOnly","calculatorInput","value","buttons","map","button","idx","val","onClick","operatorButton","clearButton","equalsButton","connect","state","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","calculatorReducer","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","module","exports"],"mappings":"i4BAGMA,WAAa,SAAbA,WAAcC,OAAW,IAAD,UACMC,oDAAS,GADf,kMACvBC,WADuB,cACXC,cADW,cAE5BC,sDAAU,WACRD,cAAcD,cACb,CAACA,aAEJ,IAAMG,gBAAkB,SAACC,GAEnBH,cADW,IAAfD,WACkBI,EACAJ,WAAU,UAAMI,KAE9BC,kBAAoB,SAACD,GACzBH,cAAcD,WAAU,UAAMI,KAE1BE,YAAc,WAClBL,cAAc,IAEVM,gBAAkB,SAAlBA,kBACJ,IAAIC,IAAMC,KAAKT,YACfC,cAAcO,MAEhB,OACE,mEAAKE,UAAWC,8DAAEC,oBAAlB,kBAEE,2EACE,oEACEC,KAAK,OACLC,UAAQ,EACRJ,UAAWC,8DAAEI,gBACbC,MAAOhB,eAGX,2EACGF,MAAMmB,QAAQC,KAAI,SAACC,EAAQC,GAC1B,MAA0B,kBAAfD,EAAOE,IAEd,qEAEEX,UAAWC,8DAAEQ,OACbG,QAAS,kBAAMnB,gBAAgBgB,EAAOE,MAHxC,SAKGF,EAAOE,KAJHD,GAQM,MAAfD,EAAOE,KACQ,MAAfF,EAAOE,KACQ,MAAfF,EAAOE,KACQ,MAAfF,EAAOE,KACQ,MAAfF,EAAOE,IAGL,qEAEEX,UAAWC,8DAAEQ,OAAS,IAAMR,8DAAEY,eAC9BD,QAAS,kBAAMjB,kBAAkBc,EAAOE,MAH1C,SAKGF,EAAOE,KAJHD,GAOe,OAAfD,EAAOE,IAEd,qEAEEX,UAAWC,8DAAEQ,OAAS,IAAMR,8DAAEa,YAC9BF,QAAS,kBAAMhB,eAHjB,SAKGa,EAAOE,KAJHD,GAOe,MAAfD,EAAOE,IAEd,qEAEEX,UAAWC,8DAAEQ,OAAS,IAAMR,8DAAEc,aAC9BH,QAAS,kBAAMf,mBAHjB,SAKGY,EAAOE,KAJHD,QAHJ,WAoCFvB,kC,sJChGA6B,eANO,SAACC,GACrB,MAAO,CACLV,QAASU,EAAMV,WAIqB,KAAzBS,EAVa,SAAC5B,GAC3B,OAAO,cAACD,EAAA,EAAD,eAAgBC,OCGV8B,EAJH,WACV,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCPRQ,EAAe,CACnBrB,QAAS,CACP,CAAEI,IAAK,MACP,CAAEA,IAAK,KACP,CAAEA,IAAK,KACP,CAAEA,IAAK,GACP,CAAEA,IAAK,GACP,CAAEA,IAAK,GACP,CAAEA,IAAK,KACP,CAAEA,IAAK,GACP,CAAEA,IAAK,GACP,CAAEA,IAAK,GACP,CAAEA,IAAK,KACP,CAAEA,IAAK,GACP,CAAEA,IAAK,GACP,CAAEA,IAAK,GACP,CAAEA,IAAK,GACP,CAAEA,IAAK,KACP,CAAEA,IAAK,OAYIkB,EARW,WAAmC,IAAlCZ,EAAiC,uDAAzBW,EAAcE,EAAW,uCAGtD,OAFIA,EAAO3B,KAEJc,G,QCnBEc,EAFDC,YAAYH,EAAmBI,YAAgBC,MCK7DC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BnB,K,kBCpBAoB,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,gBAAkB,oCAAoC,iBAAmB,qCAAqC,OAAS,2BAA2B,eAAiB,mCAAmC,YAAc,gCAAgC,aAAe,oC","file":"static/js/main.89618480.chunk.js","sourcesContent":["import s from \"./Calculator.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Calculator = (props) => {\r\n  let [currentVal, setCurrentVal] = useState(0);\r\n  useEffect(() => {\r\n    setCurrentVal(currentVal);\r\n  }, [currentVal]);\r\n\r\n  const onNumberPressed = (buttonVal) => {\r\n    currentVal === 0\r\n      ? setCurrentVal(buttonVal)\r\n      : setCurrentVal(currentVal + `${buttonVal}`);\r\n  };\r\n  const onOperatorPressed = (buttonVal) => {\r\n    setCurrentVal(currentVal + `${buttonVal}`);\r\n  };\r\n  const onACPressed = () => {\r\n    setCurrentVal(0);\r\n  };\r\n  const onEqualsPressed = () => {\r\n    let sum = eval(currentVal);\r\n    setCurrentVal(sum);\r\n  };\r\n  return (\r\n    <div className={s.calculatorContainer}>\r\n      PEZDA\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          className={s.calculatorInput}\r\n          value={currentVal}\r\n        />\r\n      </div>\r\n      <div>\r\n        {props.buttons.map((button, idx) => {\r\n          if (typeof button.val === \"number\") {\r\n            return (\r\n              <button\r\n                key={idx}\r\n                className={s.button}\r\n                onClick={() => onNumberPressed(button.val)}\r\n              >\r\n                {button.val}\r\n              </button>\r\n            );\r\n          } else if (\r\n            button.val === \"+\" ||\r\n            button.val === \"-\" ||\r\n            button.val === \"*\" ||\r\n            button.val === \"/\" ||\r\n            button.val === \".\"\r\n          ) {\r\n            return (\r\n              <button\r\n                key={idx}\r\n                className={s.button + \" \" + s.operatorButton}\r\n                onClick={() => onOperatorPressed(button.val)}\r\n              >\r\n                {button.val}\r\n              </button>\r\n            );\r\n          } else if (button.val === \"AC\") {\r\n            return (\r\n              <button\r\n                key={idx}\r\n                className={s.button + \" \" + s.clearButton}\r\n                onClick={() => onACPressed()}\r\n              >\r\n                {button.val}\r\n              </button>\r\n            );\r\n          } else if (button.val === \"=\") {\r\n            return (\r\n              <button\r\n                key={idx}\r\n                className={s.button + \" \" + s.equalsButton}\r\n                onClick={() => onEqualsPressed()}\r\n              >\r\n                {button.val}\r\n              </button>\r\n            );\r\n          }\r\n          // return (\r\n          //   <button\r\n          //     key={idx}\r\n          //     className={\r\n          //       s.button +\r\n          //       \" \" +\r\n          //       (button.val === \"=\" ? s.equalsButton : \"\") +\r\n          //       \" \" +\r\n          //       (button.val === \"AC\" ? s.clearButton : \"\") +\r\n          //       \" \" +\r\n          //       (button.val === \"+\" ? s.operatorButton : \"\")\r\n          //     }\r\n          //     onClick={() => {\r\n          //       toggleCurrentVal(button.val);\r\n          //     }}\r\n          //   >\r\n          //     {button.val}\r\n          //   </button>\r\n          // );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import { connect } from \"react-redux\";\r\nimport Calculator from \"./Calculator\";\r\n\r\nconst CalculatorContainer = (props) => {\r\n  return <Calculator {...props} />;\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    buttons: state.buttons,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CalculatorContainer);\r\n","import \"./App.css\";\nimport CalculatorContainer from \"./components/Calculator/CalculatorContainer\";\n\nconst App = () => {\n  return <CalculatorContainer />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  buttons: [\r\n    { val: \"AC\" },\r\n    { val: \"/\" },\r\n    { val: \"*\" },\r\n    { val: 7 },\r\n    { val: 8 },\r\n    { val: 9 },\r\n    { val: \"-\" },\r\n    { val: 4 },\r\n    { val: 5 },\r\n    { val: 6 },\r\n    { val: \"+\" },\r\n    { val: 1 },\r\n    { val: 2 },\r\n    { val: 3 },\r\n    { val: 0 },\r\n    { val: \".\" },\r\n    { val: \"=\" },\r\n  ],\r\n};\r\n\r\nconst calculatorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default calculatorReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport calculatorReducer from \"./calculator-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst store = createStore(calculatorReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculatorContainer\":\"Calculator_calculatorContainer__3G6Yx\",\"calculatorInput\":\"Calculator_calculatorInput__7FXeU\",\"buttonsContainer\":\"Calculator_buttonsContainer__3cenl\",\"button\":\"Calculator_button__E9flL\",\"operatorButton\":\"Calculator_operatorButton__3ejbf\",\"clearButton\":\"Calculator_clearButton__HwxpY\",\"equalsButton\":\"Calculator_equalsButton__3ZTA4\"};"],"sourceRoot":""}